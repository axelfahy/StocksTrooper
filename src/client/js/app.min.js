/*!
 * Stocks Trooper - Stocks Trooper v0.1.0 (http://stockstrooper.lemur.ovh)
 * Copyright 2016 Rudolf Hohn & Axel Fahy
 * Licensed under GNUGPLv3 (https://github.com/rudy2707/stockstrooper/LICENSE)
 */
(function() {
    'use strict';

    angular.module('app', ['stockstrooper', 'ui.bootstrap', 'highcharts-ng', 'angular-spinkit', 'pascalprecht.translate']);

})();

(function() {
    'use strict';

    angular
        .module('app')
        .controller('AppController', AppController);

    AppController.$inject = ['STServices', '$scope', '$translate'];

    function AppController(STServices, $scope, $translate) {
        var vm = this;

        vm.getEvents = getEvents;
        vm.getStocks = getStocks;
        vm.getNews = getNews;
        vm.isValid = isValid;
        vm.changeLanguage = changeLanguage;

        $scope.chartConfig = {
            options: {
                chart: {
                    zoomType: 'x'
                },
                rangeSelector: {
                    enabled: true
                },
                navigator: {
                    enabled: true
                }
            },
            series: [],
            title: {
                // text: 'AAPL Stock Index'
            },
            xAxis: {
                // title: {
                    // text: 'AAPL'
                // },
                // credits: {
                //     enabled: true
                // }
            },
            useHighStocks: true
        };

        function init() {
            vm.lang = 'en';
            vm.loading = true;
            vm.welcome = true;
            vm.picker = {
                index: '',
                valid: undefined
            }
        }

        function clean() {
            delete vm.currentIndex;
            delete vm.currentEvent;
            delete vm.events;
            delete vm.news;
        }

        ///////////////////////////////////////////////////////////////////////
        function getEvents(index, dateStart, dateEnd) {
            STServices.getEvents(index, dateStart, dateEnd)
                .then(function(res) {
                    vm.events = res;
                    vm.getNews(index, vm.events[0].date);
                    vm.currentEvent = vm.events[0].date;
                });
        }

        function isValid(index) {
            // TODO check the validity of the index
            // STServices.getValid(index)
            //     .then(function(res) {
            //
            //     });
        }

        function getStocks(index) {
            clean();
            vm.welcome = false;
            vm.loading = true;
            STServices.getStocks(index)
            .then(function(res) {
                vm.loading = false;
                vm.currentIndex = index;
                var d = [];
                for (var i = 0; i < res.length; i++) {
                    d.push([res[i][0] / 1000000, res[i][1]]);
                }
                $scope.chartConfig.series.push({
                    id: 3,
                    data: d
                });
                vm.getEvents(index, '20151209', '20161208');
                console.log($scope.chartConfig.getHighcharts());
            });
        }

        function getNews(index, dateEvent) {
            console.log(index);
            console.log(dateEvent);
            STServices.getNews(index, dateEvent)
                .then(function(res) {
                    console.log(res);
                    vm.news = res;
                });
            // vm.news = [{
            //     "headline": "Huge drop for apple",
            //     "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.Vestibulum laoreet suscipit tristique.Donec suscipit velit id feugiat placerat.Ut eget egestas risus, at fermentum ipsum.",
            //     "date": "20160112",
            //     "source": "Reuters",
            //     "url": "http://www.reuters.com/?a=xT6sSPOe99"
            // }];
        }

        function isValid(index) {
            STServices.getValid(index)
                .then(function(res) {
                    vm.valid = res;
                });
        }
        ///////////////////////////////////////////////////////////////////////

        function changeLanguage(lang) {
            vm.lang = lang;
            $translate.use(lang);
        }

        $scope.$on('news.load', function(event, date) {
            delete vm.news;
            vm.getNews(vm.currentIndex, date);
            vm.currentEvent = date;
        })

        init();
    }

})();

(function() {
    'use strict';

    angular.module('app')
        .directive('stTimeline', stTimeline)
        ;

    function stTimeline() {
        var directive = {
            restrict: 'EAC',
            templateUrl: 'js/timeline.directive.html',
            scope: {
                data: '='
            },
            controller: timelineController,
            controllerAs: 'vm',
            bindToController: false // because the scope is isolated
        };

        return directive;
    }

    timelineController.$inject = ['$scope', '$rootScope'];
    function timelineController($scope, $rootScope) {
        var vm = this;

        vm.init = init;
        vm.chooseEvent = chooseEvent;

        function init() {
            console.log($scope.data);
            vm.events = $scope.data;
        }

        function chooseEvent(currentEvent) {
            $rootScope.$broadcast('news.load', currentEvent.date);
        }

        init();
    }
})();

(function() {
    'use strict';

    angular.module('app')
        .directive('listNews', listNews)
        ;

    function listNews() {
        var directive = {
            restrict: 'EAC',
            templateUrl: 'js/list_news.directive.html',
            scope: {
                data: '='
            },
            controller: listNewsController,
            controllerAs: 'vm',
            bindToController: false // because the scope is isolated
        };

        return directive;
    }

    listNewsController.$inject = ['$scope'];
    function listNewsController($scope) {
        var vm = this;

        vm.selectNews = selectNews;
        vm.init = init;

        function init() {
            vm.response = '';
            vm.loading = false;
            vm.data = $scope.data;
            if (angular.equals({}, vm.data)) {
                vm.nodata = true;
            } else {
                vm.currentNews = vm.data[0];
                vm.currentNews.index = 0;
            }
        }

        function selectNews(news, index) {
            vm.currentNews = news;
            vm.currentNews.index = index;
        }

        init();
    }
})();

(function() {
    'use strict';


    angular
        .module('app')
        .config(TranslateConfigurator);

    TranslateConfigurator.$inject = ['$translateProvider'];
    function TranslateConfigurator($translateProvider) {
            $translateProvider
                .translations('en', translationsEN)
                .translations('st', translationsST)
                .preferredLanguage('en')
                ;
    }

    var translationsEN = {
        PICKER: {
            BTN_INDEX: 'LOAD THE DATA',
            LABEL: 'INDEX PICKER'
        },
        CHART: {
            TITLE: '{{index}} INDEX HISTORY'
        },
        NEWS: {
            TITLE: 'NEWS RELEVANT TO THE EVENT'
        },
        EVENTS: {
            TITLE: 'EVENTS'
        }
    };

    var translationsST = {
        PICKER: {
            BTN_INDEX: 'USE THE FORCE',
            LABEL: 'PLANET PICKER'
        },
        CHART: {
            TITLE: 'HISTORY OF THE PLANET {{index}}'
        },
        NEWS: {
            TITLE: 'SECRET FILES OF BATTLE'
        },
        EVENTS: {
            TITLE: 'IMPORTANT BATTLES'
        }
    };

})();
